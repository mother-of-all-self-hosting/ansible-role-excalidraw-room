# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# We use the `htpasswd` tool to generate the htpasswd file.
# There's an Ansible module that helps with that, but it requires passlib (a Python module) to be installed on the server.
# See: https://docs.ansible.com/ansible/2.3/htpasswd_module.html#requirements-on-host-that-executes-module
# We support various distros, with various versions of Python. Installing additional Python modules can be a hassle.
# As a workaround, we run `htpasswd` from an Apache container image.
- name: Run if HTTP Basic authentication is enabled
  when: excalidraw_basic_auth_enabled | bool
  block:
    - name: Ensure Apache Docker image is pulled for generating htpasswd file
      community.docker.docker_image:
        name: "{{ excalidraw_basic_auth_apache_container_image }}"
        source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
        force_source: "{{ excalidraw_basic_auth_apache_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
        force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else excalidraw_basic_auth_apache_container_image_force_pull }}"
      register: result
      retries: "{{ devture_playbook_help_container_retries_count }}"
      delay: "{{ devture_playbook_help_container_retries_delay }}"
      until: result is not failed

    # We store the password in a file and make the `htpasswd` tool read it from there,
    # as opposed to passing it directly on stdin (which will expose it to other processes on the server).
    - name: Store HTTP Basic authentication password in a temporary file
      ansible.builtin.copy:
        content: "{{ excalidraw_basic_auth_password }}"
        dest: "/tmp/registry-browser-password"
        mode: "0400"
        owner: "{{ excalidraw_uid }}"
        group: "{{ excalidraw_gid }}"

    - name: Generate htpasswd from username/password
      ansible.builtin.command:
        cmd: >-
          {{ devture_systemd_docker_base_host_command_docker }} run
          --rm
          --user={{ excalidraw_uid }}:{{ excalidraw_gid }}
          --cap-drop=ALL
          --network=none
          --read-only
          --mount type=bind,src=/tmp/registry-browser-password,dst=/password,ro
          --entrypoint=/bin/sh
          {{ excalidraw_basic_auth_apache_container_image }}
          -c
          'cat /password | htpasswd -i -n {{ excalidraw_basic_auth_username }}'
      changed_when: true
      register: htpasswd_result

    - name: Capture htpasswd password
      ansible.builtin.set_fact:
        excalidraw_container_label_basicauth_users: "{{ htpasswd_result.stdout }}"

    - name: Delete temporary HTTP Basic authentication password file
      ansible.builtin.file:
        path: /tmp/registry-browser-password
        state: absent
